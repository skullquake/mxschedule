// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxschedule.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * schedules nashorn script by ms
 * returns true on success, false on fail
 */
public class ja_putSchedule_nh_ms extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String str_nh;
	private java.lang.Long int_ms;

	public ja_putSchedule_nh_ms(IContext context, java.lang.String str_nh, java.lang.Long int_ms)
	{
		super(context);
		this.str_nh = str_nh;
		this.int_ms = int_ms;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		java.lang.Boolean ret=false;
		ja_putSchedule_nh_ms  _this=this;
		if(str_nh==null){
			throw new java.lang.Exception("Script null:Aborting...");
		}
		if(int_ms==null){
			throw new java.lang.Exception("Milliseconds null:Aborting...");
		}
		org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler scheduler = new org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler();
		scheduler.initialize();
		scheduler.scheduleWithFixedDelay(
			new java.lang.Runnable() {
				@Override
				public void run() {
					try{
						javax.script.ScriptEngine engine=new javax.script.ScriptEngineManager().getEngineByName("nashorn");
						javax.script.Bindings bindings=engine.createBindings();
						bindings.put("root",_this);
						engine.eval(str_nh,bindings);
					}catch(Exception e){
						com.mendix.core.Core.getLogger("Runnable").error(e.toString());
					}
				}
			},
			int_ms.longValue()
		);
		mxschedule.Schedule.hashmap.put(java.util.UUID.randomUUID().toString(),scheduler);
		ret=true;
		return ret;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "ja_putSchedule_nh_ms";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
