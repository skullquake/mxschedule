// This file was generated by Mendix Modeler 6.10.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mxschedule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MxSchedule module
	public static void asu_init(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.asu_init", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mxschedule.proxies.KV> ds_schedules(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "MxSchedule.ds_schedules", params);
			java.util.List<mxschedule.proxies.KV> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mxschedule.proxies.KV>();
				for (IMendixObject obj : objs)
					result.add(mxschedule.proxies.KV.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean ivk_cronstring_validate(IContext context, java.lang.String _str_a)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("str_a", _str_a);
			return (java.lang.Boolean)Core.execute(context, "MxSchedule.ivk_cronstring_validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_microflows_removeall(IContext context, mxschedule.proxies.Schedule _obj_schedule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_schedule", _obj_schedule == null ? null : _obj_schedule.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_schedule_microflows_removeall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_put_mf_cron(IContext context, java.lang.String _str_mf, java.lang.String _str_cron)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("str_mf", _str_mf);
			params.put("str_cron", _str_cron);
			Core.execute(context, "MxSchedule.ivk_schedule_put_mf_cron", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_put_mf_ms(IContext context, java.lang.String _str_mf, java.lang.Long _int_ms)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("str_mf", _str_mf);
			params.put("int_ms", _int_ms);
			Core.execute(context, "MxSchedule.ivk_schedule_put_mf_ms", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_put_nh_cron(IContext context, java.lang.String _str_nh, java.lang.String _str_cron)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("str_nh", _str_nh);
			params.put("str_cron", _str_cron);
			Core.execute(context, "MxSchedule.ivk_schedule_put_nh_cron", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_put_nh_ms(IContext context, java.lang.String _str_nh, java.lang.Long _int_ms)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("str_nh", _str_nh);
			params.put("int_ms", _int_ms);
			Core.execute(context, "MxSchedule.ivk_schedule_put_nh_ms", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_script_removeall(IContext context, mxschedule.proxies.Schedule _obj_schedule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_schedule", _obj_schedule == null ? null : _obj_schedule.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_schedule_script_removeall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_shutdown(IContext context, mxschedule.proxies.KV _obj_kv)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_kv", _obj_kv == null ? null : _obj_kv.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_schedule_shutdown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_shutdown_all(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_schedule_shutdown_all", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_start(IContext context, mxschedule.proxies.Schedule _obj_schedule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_schedule", _obj_schedule == null ? null : _obj_schedule.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_schedule_start", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_schedule_validate_cronstring(IContext context, mxschedule.proxies.Schedule _obj_schedule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_schedule", _obj_schedule == null ? null : _obj_schedule.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_schedule_validate_cronstring", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_script_drop(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_script_drop", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_script_exec(IContext context, mxschedule.proxies.Script _obj_script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_script", _obj_script == null ? null : _obj_script.getMendixObject());
			Core.execute(context, "MxSchedule.ivk_script_exec", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_test_000(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_test_000", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_test_001(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_test_001", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_test_002(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_test_002", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_test_003(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MxSchedule.ivk_test_003", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}